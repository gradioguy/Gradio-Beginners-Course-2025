# -*- coding: utf-8 -*-
"""Render.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16gbcGbL0G6_VFVyaND87fsahkOMzmYXI
"""

import gradio as gr

with gr.Blocks() as demo:
  input_text = gr.Textbox(label="Enter text")

  @gr.render(inputs=input_text)
  def show_letters(text):
    if not text:
      gr.Markdown("Enter some text to split it into letters.")
    else:
      for letter in text:
        gr.Textbox(label=f"Letter {letter}", value=letter)
  demo.launch()

import gradio as gr

with gr.Blocks() as demo:
  input_text = gr.Textbox(label="Enter text")
  mode = gr.Radio(["text", "button"], label="Mode", value="text")

  @gr.render(inputs=[input_text, mode])
  def toggle_mode(text, mode):
    if mode == "text":
      for letter in text:
        gr.Textbox(label=f"Letter {letter}", value=letter)
    else:
      for letter in text:
        gr.Button(letter)
  demo.launch()

import gradio as gr

with gr.Blocks() as demo:
  field_count = gr.State(1)
  add_field = gr.Button("Add Field")
  add_field.click(lambda n: n+1, field_count, field_count)

  @gr.render(inputs=field_count)
  def render_form(count):
    fields = []
    for i in range(count):
      with gr.Row():
        fields.append(gr.Textbox(label=f"Field {i+1}"))
    gr.Button("Submit")
  demo.launch()

import gradio as gr

with gr.Blocks() as demo:
  question_count = gr.State(1)
  add_question = gr.Button("Add Question")
  add_question.click(lambda n: n+1, question_count, question_count)

  @gr.render(inputs=question_count)
  def render_form(count):
    questions = []
    for i in range(count):
      with gr.Column():
        questions.append(gr.Textbox(label=f"Question {i+1}", placeholder="Enter question here"))
    gr.Button("Submit Quiz")

  demo.launch()

import gradio as gr
from PIL import Image

with gr.Blocks() as demo:
  grid_size = gr.State(3)
  size_input = gr.Number(label="Grid Size", value=3)
  size_input.change(lambda n: n, size_input, grid_size)

  @gr.render(inputs=grid_size)
  def render_gallery(size):
    with gr.Row():
      for _ in range(size):
        gr.Image(Image.new("RGB", (200, 200)), label="Placeholder Image")

  demo.launch()

import gradio as gr

with gr.Blocks() as demo:
  language_pairs = gr.State(["en->es", "en->fr"])
  add_pair = gr.Button("Add Language Pair")
  add_pair.click(lambda pairs: pairs + ["en->de"], language_pairs, language_pairs)

  @gr.render(inputs=language_pairs)
  def render_translation(pairs):
    for pair in pairs:
      with gr.Row():
        gr.Textbox(label=f"Source ({pair.split('->')[0]})")
        gr.Textbox(label=f"Translation ({pair.split('->')[1]})")

  demo.launch()

import gradio as gr

with gr.Blocks() as demo:
  tasks = gr.State([])
  add_task = gr.Button("Add Task")
  task_input = gr.Textbox(label="Enter new task")
  add_task.click(lambda inp, tasks: tasks + [inp], [task_input, tasks], tasks)


  @gr.render(inputs=tasks)
  def render_tasks(task_list):
    for task in task_list:
      with gr.Row():
        gr.Textbox(label="", value=task, interactive=False)

  demo.launch()

