# -*- coding: utf-8 -*-
"""Column.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14LULX2edFP0bXe7rVc1IP6ZtTDDcCUj3
"""

import gradio as gr

with gr.Blocks() as demo:
  with gr.Row():
    with gr.Column(scale=2):
      gr.Textbox(label="Text Input 1")
      gr.Button("Submit 1")
    with gr.Column(scale=1):
      gr.Textbox(label="Text Input 2")
      gr.Button("Submit 2")

demo.launch()

import gradio as gr

with gr.Blocks() as demo:
  with gr.Row():
    with gr.Column(scale=1, min_width=200):
      gr.Textbox(label="Minimum Width 200")
    with gr.Column(scale=2, min_width=100):
      gr.Textbox(label="Minimum Width 100")

  gr.Markdown("The left column has a min_width of 200, while the right column has a min_width of 100.")

demo.launch()

import gradio

with gr.Blocks() as demo:
  with gr.Row():
    with gr.Column(variant='default'):
      gr.Textbox(label="Default Variant")
    with gr.Column(variant='panel'):
      gr.Textbox(label="Panel Variant")
    with gr.Column(variant='compact'):
      gr.Textbox(label="Compact Variant")


  gr.Markdown("Three columns with different variants: default, panel, and compact.")

demo.launch()

import gradio as gr

def toggle_columnVisibility(is_visible):
  return gr.update(visible=is_visible)


with gr.Blocks() as demo:
  with gr.Row():
    show_col = gr.Checkbox(label="Show Column", interactive=True)
    output_col = gr.Column(visible=False)

  show_col.change(fn=toggle_columnVisibility, inputs=show_col, outputs=output_col)

  with output_col:
    gr.Textbox(label="This Column can be toggled")

  gr.Markdown("The Column containing the Textbox can be toggled using the Checkbox")

demo.launch()

import gradio as gr

with gr.Blocks() as demo:
  with gr.Row():
    with gr.Column(render=True):
      gr.Textbox(label="Not Rendered")
    with gr.Column():
      gr.Textbox(label="Rendered")

  gr.Markdown("The first Column is not rendered upon initialization, while the second one is.")

demo.launch()

import gradio as gr
import time

def process_input(text):
  time.sleep(2)
  return f"Processed: {text}"

with gr.Blocks() as demo:
  with gr.Row():
    with gr.Column(show_progress=True):
      input_text = gr.Textbox(label="Input Text")
      process_btn = gr.Button("Process")
      output_text = gr.Textbox(label="Output")

  process_btn.click(fn=process_input, inputs=input_text, outputs=output_text)

  gr.Markdown("A progress indicator appears when the process button is clicked, simulating a processing task.")

demo.launch()

import gradio as gr

with gr.Blocks() as demo:
  with gr.Row():
    with gr.Column(scale=2):
      gr.Textbox(label="External Column")
      with gr.Column(variant='panel'):
        gr.Textbox(label="Internal Column Panel")
      with gr.Column(variant='compact'):
        gr.Textbox(label="Internal Column Compact")

  gr.Markdown("A Column containing nested Columns with different variants.")

demo.launch()

import gradio as gr


def show_column(input_text):
  if input_text:
    return gr.update(visible=True)
  return gr.update(visible=False)

with gr.Blocks() as demo:
  with gr.Row():
    input_text = gr.Textbox(label="Enter Text to Show Column")
    show_col = gr.Column(visible=False)

  input_text.change(fn=show_column, inputs=input_text, outputs=show_col)

  with show_col:
    gr.Textbox(label="This Column appears when text is entered")

  gr.Markdown("The Column containing the Textbox appears dynamically based on input text")

demo.launch()

import gradio as gr

with gr.Blocks() as demo:
  with gr.Row():
    with gr.Column(scale=1):
      gr.Image(label="Image Input", type="pil")
      gr.Audio(label="Audio Input")
    with gr.Column(scale=3):
      gr.Video(label="Video Output")

  gr.Markdown("A layout combining different input and output components within Columns")

demo.launch()

