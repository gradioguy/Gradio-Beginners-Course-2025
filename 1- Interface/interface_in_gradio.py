# -*- coding: utf-8 -*-
"""Interface in Gradio.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SVu4SyMB1u63m3KLfKM3go8pz1hD1qKS
"""

pip install gradio

"""# **Greeting Function**"""

import gradio as gr

def greet(name):
    return f"Hello, {name}!"

demo = gr.Interface(fn=greet, inputs="textbox", outputs="textbox")
demo.launch()

"""# **Emotion Detector**"""

import gradio as gr

def detect_emotion(text):
    # Example emotion detection logic
    return "happy" if "happy" in text else "neutral"

demo = gr.Interface(fn=detect_emotion, inputs="textbox", outputs="label")
demo.launch()

"""# **Text Summarizer**"""

import gradio as gr

def summarize(text):
    # Example summarization logic
    return text[:100] + "..." if len(text) > 100 else text

demo = gr.Interface(fn=summarize, inputs="textarea", outputs="textbox")
demo.launch()

"""# **Image Classifier**"""

import gradio as gr

def classify_image(image):
    # Example classification logic
    return {"cat": 0.3, "dog": 0.7}

demo = gr.Interface(fn=classify_image, inputs="image", outputs="label")
demo.launch()

"""# **BMI Calculator**"""

import gradio as gr

def calculate_bmi(height, weight):
    return round(weight / (height / 100) ** 2, 2)

with gr.Interface(
    fn=calculate_bmi,
    inputs=["number", "number"],
    outputs="number",
    title="BMI Calculator",
    description="Calculate your BMI with height and weight."
) as demo:
    demo.launch()

"""# **Currency Converter**"""

import gradio as gr

def convert_currency(amount, from_curr, to_curr):
    # Example conversion rate (1 USD = 2.7 INR, etc.)
    rates = {"USD": 1.0, "INR": 2.7, "EUR": 0.85}
    return amount * rates[from_curr] / rates[to_curr]

with gr.Interface(
    fn=convert_currency,
    inputs=["number", "dropdown", "dropdown"],
    outputs="number",
    title="Currency Converter",
) as demo:
    demo.launch()

"""# **Speed Converter**"""

import gradio as gr

def calculate_speed(distance, time):
    return distance / time

with gr.Interface(
    fn=calculate_speed,
    inputs=["number", "number"],
    outputs="number",
    title="Speed Calculator",
) as demo:
    demo.launch()

"""# **Tip Calculator**"""

import gradio as gr

def calculate_tip(bill, tip_percent):
    return bill * (tip_percent / 100)

with gr.Interface(
    fn=calculate_tip,
    inputs=["number", "slider"],
    outputs="number",
    title="Tip Calculator",
) as demo:
    demo.launch()

"""# **Word Counter**"""

import gradio as gr

def count_words(text):
    return len(text.split())

with gr.Interface(
    fn=count_words,
    inputs="textarea",
    outputs="label",
    title="Word Counter",
) as demo:
    demo.launch()

"""# **Temperature Converter**"""

import gradio as gr

def convert_temp(temp, from_unit):
    if from_unit == "Celsius":
        return temp * 9/5 + 32, "Fahrenheit"
    else:
        return (temp - 32) * 5/9, "Celsius"

with gr.Interface(
    fn=convert_temp,
    inputs=["number", "radio"],
    outputs=["number", "label"],
    title="Temperature Converter",
) as demo:
    demo.launch()

"""# **Dice Roller**"""

import gradio as gr
import random

def roll_dice(num_dice, sides):
    return [random.randint(1, sides) for _ in range(num_dice)]

with gr.Interface(
    fn=roll_dice,
    inputs=["number", "number"],
    outputs="textarea",
    title="Dice Roller",
) as demo:
    demo.launch()

"""# **Recipe Generator**"""

import gradio as gr

def generate_recipe(ingredients):
    # Example recipe logic
    return f"A tasty dish with {ingredients}"

with gr.Interface(
    fn=generate_recipe,
    inputs="textarea",
    outputs="textbox",
    title="Recipe Generator",
) as demo:
    demo.launch()

"""# **Language Translator**"""

import gradio as gr

def translate(text, target_lang):
    # Example translation logic
    return f"Translated to {target_lang}: {text}"

with gr.Interface(
    fn=translate,
    inputs=["textbox", "dropdown"],
    outputs="textbox",
    title="Language Translator",
) as demo:
    demo.launch()

