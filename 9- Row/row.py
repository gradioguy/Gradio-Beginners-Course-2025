# -*- coding: utf-8 -*-
"""Row.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZDLoNn7So_uppKNFRFDWGPcGaSPEhlT-
"""

import gradio as gr

def greet(name):
  return f"Hello, {name}!"

with gr.Blocks() as demo:
  with gr.Row():
    input = gr.Textbox(label="Enter you name", placeholder="Your Name")
    output = gr.Textbox(label="Output")

  with gr.Row():
    greet_button = gr.Button("Greet")
    clear_button = gr.Button("Clear")


  greet_button.click(
      fn=greet,
      inputs= input,
      outputs = output
  )

  clear_button.click(
      fn=lambda: ("", ""),
      outputs=[input, output]
  )

demo.launch()

import gradio as gr

with gr.Blocks() as demo:
  with gr.Row(variant="default"):
    gr.Text("Default Variant")

  with gr.Row(variant="panel"):
    gr.Text("Panel Variant")

  with gr.Row(variant="compact"):
    gr.Text("Compact Variant")

demo.launch()

import gradio as gr

with gr.Blocks() as demo:
  show_row = gr.Checkbox(label="Show Row", value=False)

  with gr.Row(visible=False) as hidden_row:
    gr.Text("This row is initially hidden")

  show_row.change(
      fn = lambda x:gr.Row.update(visible=x),
      inputs = show_row,
      outputs = hidden_row
  )

demo.launch()

import gradio as gr

with gr.Blocks() as demo:
  with gr.Row() as row:
    gr.Image("lion.jpg", scale=3)
    gr.Image("tiger.jpg", scale=1)
    gr.Image("elephant.jpg", scale=2)

  gr.Text(f"Row components are scaled proportionally based on their 'scale' parameter values")

demo.launch()

import gradio as gr

with gr.Blocks() as demo:
  with gr.Row(equal_height=True):
    gr.Textbox(label="Short Text", lines=2)
    gr.Textbox(label="Long Text", lines=5)
    gr.Checkbox(label="Checkbox")

demo.launch()

import gradio as gr
import time

def process_data(text):
  time.sleep(2)
  return f"Processed: {text}"


with gr.Blocks() as demo:
  with gr.Row(show_progress=True) as row:
    input = gr.Textbox(label="Enter text to process")
    button = gr.Button("Process")
    output = gr.Textbox(label="Output")

  button.click(
      fn = process_data,
      inputs = input,
      outputs = output
  )
demo.launch()

import gradio as gr

with gr.Blocks() as demo:
  with gr.Row(
      variant = 'panel',
      visible = True,
      elem_id = 'custom_row',
      elem_classes = ['my-class'],
      scale=2,
      render=True,
      height=150,
      min_height=100,
      equal_height=True,
      show_progress=False
  ):
      gr.Text("This row has multiple parameters configured")


demo.launch()

import gradio as gr

def process(name, age, occupation):
  return f"Name: {name}\nAge: {age}\nOccupation: {occupation}"

with gr.Blocks() as demo:
  with gr.Row():
    gr.Text("User Information Form")

  with gr.Row():
    name_input = gr.Textbox(label="Name")
    age_input = gr.Number(label="Age")

  with gr.Row():
    occupation_input = gr.Textbox(label="Occupation")

  with gr.Row():
    submit_button = gr.Button("Submit")
    clear_button = gr.Button("Clear")

  output = gr.Textbox(label="Output", interactive=False)

  submit_button.click(
      fn=process,
      inputs=[name_input, age_input, occupation_input],
      outputs = output
  )

  clear_button.click(
      fn=lambda:("", "", "", ""),
      outputs=[name_input, age_input, occupation_input, output]
  )

demo.launch()

